---
import { ViewTransitions } from "astro:transitions";
import { SITE_URL, SITE_HOST, SITE_TITLE } from "../../constants";

type Props = {
  title: string;
  description: string;
};

const { title, description } = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const isBlogPost = Astro.url.pathname.startsWith("/post/");
---

<meta charset="UTF-8" />
<meta
  name="viewport"
  content="width=device-width, initial-scale=1, shrink-to-fit=no"
/>
<meta name="title" content={title} />
<meta name="description" content={description} />
<meta name="generator" content={Astro.generator} />
<meta property="og:type" content={isBlogPost ? "article" : "website"} />
<meta property="og:title" content={title} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:description" content={description} />
<meta property="twitter:url" content={Astro.url} />
<meta property="twitter:title" content={title} />
<meta property="twitter:description" content={description} />
<meta property="twitter:card" content="summary_large_image" />
<meta
  name="google-site-verification"
  content="prK6BmE4iKvuqvzBJGSowwg76K1I4GtEAzKGX_BiLSk"
/>
<link
  rel="canonical"
  href={canonicalURL}
  data-baseprotocol="https:"
  data-basehost={SITE_HOST}
/>
<link
  rel="alternate"
  type="application/rss+xml"
  title="RSS Feed"
  href={`${SITE_URL}/rss.xml`}
/>
<link rel="sitemap" href={`${SITE_URL}/sitemap-index.xml`} />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<ViewTransitions />
